@import url('tailwindcss');
@import url('react-resizable/css/styles.css');
@import url('react-grid-layout/css/styles.css');
@import url('./styles/resizable.css');

/* Use CSS Layers, but define overrides directly here, not import within layer */
@layer base, components, overrides;

@theme {
  /* Base colors */
  --color-background: oklch(99% 0 0deg);
  --color-foreground: oklch(15% 0.015 240deg);

  /* Card colors */
  --color-card: oklch(100% 0 0deg);
  --color-card-foreground: oklch(15% 0.015 240deg);

  /* Primary colors - dark blue for main buttons */
  --color-primary: oklch(25% 0.05 270deg);
  --color-primary-foreground: oklch(98% 0.005 270deg);

  /* Brand colors - consistent with primary */
  --color-brand: oklch(25% 0.05 270deg);
  --color-brand-foreground: oklch(98% 0.005 270deg);

  /* Form input background - white */
  --color-form-bg: oklch(100% 0 0deg);
  --color-form-border: oklch(85% 0.005 240deg);

  /* Secondary colors */
  --color-secondary: oklch(95% 0.01 240deg);
  --color-secondary-foreground: oklch(15% 0.015 240deg);

  /* Muted colors */
  --color-muted: oklch(95% 0.01 240deg);
  --color-muted-foreground: oklch(50% 0.01 240deg);

  /* Accent colors */
  --color-accent: oklch(95% 0.01 240deg);
  --color-accent-foreground: oklch(15% 0.015 240deg);

  /* Destructive colors */
  --color-destructive: oklch(60% 0.15 20deg);
  --color-destructive-foreground: oklch(98% 0.005 20deg);

  /* Border and input - more visible borders */
  --color-border: oklch(85% 0.005 240deg);
  --color-input: oklch(85% 0.005 240deg);
  --color-ring: oklch(55% 0.08 250deg);

  /* Border radius */
  --radius: 0.5rem;

  /* Grid system variables */
  --grid-row-height: 68px;
  --grid-gap: 16px;
  --grid-margin-x: 16px;
  --grid-margin-y: 16px;
}

@layer base {
  * {
    border-color: theme(--color-border);
  }

  body {
    background-color: theme(--color-background);
    color: theme(--color-foreground);
    font-feature-settings:
      'rlig' 1,
      'calt' 1;
  }
}

@layer components {
  /* Enhanced visual feedback styles for grid items (excluding main layout containers) */
  .react-grid-item:not(.main-layout > .react-grid-item) {
    backdrop-filter: blur(8px);
    background: rgb(255 255 255 / 80%);
    border: 1px solid rgb(59 130 246 / 10%);
    border-radius: 0.75rem;
    transition: all 200ms cubic-bezier(0.4, 0, 0.2, 1);
  }

  .react-grid-item:not(.main-layout > .react-grid-item):hover {
    box-shadow:
      0 0 0 1px rgb(59 130 246 / 40%),
      0 4px 16px rgb(59 130 246 / 15%),
      0 8px 32px rgb(59 130 246 / 8%);
    border-color: rgb(59 130 246 / 30%);
    transform: translateY(-1px);
  }

  .react-grid-item.resizing:not(.main-layout > .react-grid-item) {
    box-shadow:
      0 0 0 2px rgb(59 130 246 / 70%),
      0 8px 25px rgb(59 130 246 / 25%),
      0 16px 48px rgb(59 130 246 / 15%);
    border-color: rgb(59 130 246 / 60%);
    transform: scale(1.02);
  }

  .react-grid-item.react-draggable-dragging:not(
      .main-layout > .react-grid-item
    ) {
    box-shadow:
      0 0 0 2px rgb(16 185 129 / 70%),
      0 12px 32px rgb(16 185 129 / 25%),
      0 24px 64px rgb(16 185 129 / 15%);
    border-color: rgb(16 185 129 / 60%);
    transform: scale(1.05) rotate(1deg);
  }

  /* Main layout containers - transparent and no visual styles */
  .main-layout > .react-grid-item {
    background: transparent;
    border: none;
    box-shadow: none;
  }

  .main-layout > .react-grid-item:hover {
    transform: none;
    box-shadow: none;
    border: none;
  }

  /* Grid layout container styles (currently unused but kept for future) */
  /* .layout {
    position: relative;
    background: transparent;
  } */
}

@layer overrides {
  /* Ensure animation is not broken */
  .react-grid-item {
    transition: all 200ms ease;
    transition-property: left, top, width, height;
  }

  .react-grid-item.cssTransforms {
    transition-property: transform, width, height;
  }

  .react-grid-item.react-draggable-dragging {
    transition: none;
    z-index: 3;
    will-change: transform;
  }

  /* Placeholder styles - maintain original positioning logic */
  .react-grid-placeholder {
    background: rgb(59 130 246 / 20%);
    border: 2px dashed rgb(59 130 246 / 50%);
    border-radius: 0.5rem;
    opacity: 100%;
    z-index: 2;
    transition-duration: 100ms;
    user-select: none;

    /* Do not add any properties that might affect positioning */
  }

  /* Show resize handle indicator for all grid items except main layout containers */
  .react-grid-item:not(.main-layout > .react-grid-item)
    > .react-resizable-handle::after {
    content: '';
    position: absolute;
    right: 3px;
    bottom: 3px;
    width: 5px;
    height: 5px;
    border-right: 2px solid rgb(0 0 0 / 40%);
    border-bottom: 2px solid rgb(0 0 0 / 40%);
  }

  /* Expand touch area - for all resize handles */
  .react-grid-item > .react-resizable-handle.react-resizable-handle-se {
    width: 24px;
    height: 24px;
    right: -3px;
    bottom: -3px;
  }

  .react-grid-item > .react-resizable-handle.react-resizable-handle-e {
    width: 8px;
    height: calc(100% - 24px);
    right: -4px;
    top: 12px;
  }

  .react-grid-item > .react-resizable-handle.react-resizable-handle-s {
    width: calc(100% - 24px);
    height: 8px;
    bottom: -4px;
    left: 12px;
  }

  .react-grid-item > .react-resizable-handle.react-resizable-handle-w {
    width: 8px;
    height: calc(100% - 24px);
    left: -4px;
    top: 12px;
  }

  .react-grid-item > .react-resizable-handle.react-resizable-handle-n {
    width: calc(100% - 24px);
    height: 8px;
    top: -4px;
    left: 12px;
  }

  .react-grid-item > .react-resizable-handle.react-resizable-handle-sw {
    width: 16px;
    height: 16px;
    left: -3px;
    bottom: -3px;
  }

  .react-grid-item > .react-resizable-handle.react-resizable-handle-nw {
    width: 16px;
    height: 16px;
    left: -3px;
    top: -3px;
  }

  .react-grid-item > .react-resizable-handle.react-resizable-handle-ne {
    width: 16px;
    height: 16px;
    right: -3px;
    top: -3px;
  }
}
